{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Times-Bold;\f1\froman\fcharset0 Times-Roman;\f2\fnil\fcharset0 LucidaGrande;
\f3\fmodern\fcharset0 Courier;\f4\fmodern\fcharset0 Courier-Bold;\f5\fnil\fcharset0 LucidaGrande-Bold;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid1\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid2\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{square\}}{\leveltext\leveltemplateid3\'01\uc0\u9642 ;}{\levelnumbers;}\fi-360\li2160\lin2160 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Summary of the Chat \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls1\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Git & Workflow
\f1\b0 :\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls1\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Discussed Git branching, the use of 
\f3\fs26 git reset
\f1\fs24 , and cleaning up mistakes in commits. We touched on the importance of merging frequently to 
\f4\b\fs26 main
\f1\b0\fs24  when working solo and pushing regularly to keep changes backed up and synchronized.\
\ls1\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 To 
\f0\b undo a 
\f4\fs26 git add
\f1\b0\fs24 , the command 
\f3\fs26 git reset <file>
\f1\fs24  was shared, which unstages files added previously.\
\ls1\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Explored temporary Git references like 
\f3\fs26 FETCH_HEAD
\f1\fs24  and 
\f3\fs26 ORIG_HEAD
\f1\fs24 , which aren\'92t branches but are used for syncing, merging, or recovering from operations.\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls1\ilvl1
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f5 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Aliases
\f1\b0  were discussed for streamlining commands such as 
\f3\fs26 git merge
\f1\fs24  by creating a custom command using 
\f3\fs26 alias
\f1\fs24 . It was recommended to use 
\f3\fs26 git merge
\f1\fs24  with dynamic branch names using 
\f3\fs26 $(git rev-parse --abbrev-ref HEAD)
\f1\fs24  to dynamically get the current branch name in the command.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls1\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Spotify API & Story Length
\f1\b0 :\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls1\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Discussed how to use the 
\f0\b Spotify API
\f1\b0  (via 
\f3\fs26 spotipy
\f1\fs24 ) to fetch track durations and use it for estimating story lengths. The 
\f0\b track duration
\f1\b0  is fetched, then passed to a function that estimates the 
\f0\b story length
\f1\b0  based on 
\f0\b WPM
\f1\b0  (Words Per Minute).\
\ls1\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Two options were considered for integrating the track duration into the storytelling app:\
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\partightenfactor0
\ls1\ilvl2
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f5 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Option 1:
\f1\b0  Directly instructing the AI model to adjust its story length to the track\'92s duration.\
\ls1\ilvl2
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f5 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Option 2:
\f1\b0  Using speech velocity and WPM to more precisely calculate the number of words or characters corresponding to the track duration. 
\f0\b Option 2
\f1\b0  was chosen for its precision.\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls1\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 The average WPM for voices like 
\f0\b 'Cove'
\f1\b0  from OpenAI was estimated to be around 178 WPM. From this, we calculated story length using track duration.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls1\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 File Structure & Organization
\f1\b0 :\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls1\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Discussed the 
\f0\b organization of functions
\f1\b0  and which file to place the 
\f3\fs26 estimate_story_length()
\f1\fs24  function for better project structure. It was recommended to place utility functions like 
\f3\fs26 estimate_story_length()
\f1\fs24  in a 
\f3\fs26 utils.py
\f1\fs24  file within the 
\f3\fs26 src
\f1\fs24  folder to keep the project modular and clean.\
\ls1\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Considered how functions interact in the code, like how the 
\f3\fs26 get_spotify_duration
\f1\fs24  function fetches the track duration and how it connects to 
\f3\fs26 estimate_story_length
\f1\fs24  for story length calculation, and then passes it to the AI model.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls1\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	4	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Error Handling & Cleanup
\f1\b0 :\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls1\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 For cleanup, we handled issues like the 
\f3\fs26 .cache
\f1\fs24  folder being pushed to remote, instructing the user to remove it with 
\f3\fs26 git rm --cached .cache
\f1\fs24 , ensuring that it was added to 
\f3\fs26 .gitignore
\f1\fs24  so it\'92s ignored in future commits.\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls1\ilvl1
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f5 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Git Add Issues
\f1\b0 : We clarified that when you add something already ignored, you might need to force-add or untrack files manually.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls1\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	5	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Git Aliases
\f1\b0 :\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls1\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Discussed creating Git aliases using 
\f3\fs26 git config
\f1\fs24 , allowing you to use a custom command to merge branches with one command. An alias for merging the current branch into 
\f3\fs26 main
\f1\fs24  was created with 
\f3\fs26 git merge
\f1\fs24 .\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls1\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	6	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Visualizing the Project Structure
\f1\b0 :\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls1\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 A 
\f0\b graph
\f1\b0  was generated to represent the function connections (from 
\f3\fs26 get_spotify_duration
\f1\fs24  to 
\f3\fs26 estimate_story_length
\f1\fs24  to 
\f3\fs26 model.generate
\f1\fs24 ) for a clearer understanding of the process.\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls1\ilvl1
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f5 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Dynamic variables
\f1\b0  for the current branch were implemented, allowing the alias to fetch the current branch dynamically instead of hardcoding the branch name.\
\pard\pardeftab720\partightenfactor0
\cf0 \
\pard\pardeftab720\sa240\partightenfactor0
\cf0 This summary brings together all the points covered, including Git usage, project structure, API integration, error handling, and optimizations for workflow efficiency.\
}